import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.0.0'
    id "com.github.ben-manes.versions" version '0.51.0'
    id 'org.jmailen.kotlinter' version "4.3.0" apply false
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

allprojects {
    description = 'kslides'
    group 'com.github.kslides'
    version '0.22.0'

    apply plugin: 'application'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jmailen.kotlinter'
    apply plugin: 'org.jetbrains.kotlin.plugin.serialization'

    repositories {
        google()
        mavenCentral()
        maven { url = 'https://repo.kotlin.link' }
        maven { url = 'https://jitpack.io' }
    }

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
    }
}

subprojects {
    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"

        implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serialization_version"

        implementation "org.jetbrains.kotlin-wrappers:kotlin-css:$css_version"

        implementation "io.ktor:ktor-server:$ktor_version"
        implementation "io.ktor:ktor-server-cio:$ktor_version"
        implementation "io.ktor:ktor-server-sessions:$ktor_version"
        implementation "io.ktor:ktor-server-html-builder:$ktor_version"
        implementation "io.ktor:ktor-server-call-logging:$ktor_version"
        implementation "io.ktor:ktor-server-compression:$ktor_version"

        implementation "io.ktor:ktor-client-core:$ktor_version"
        implementation "io.ktor:ktor-client-cio:$ktor_version"

        implementation "com.github.pambrose.common-utils:core-utils:$utils_version"
        implementation "com.github.pambrose.common-utils:ktor-server-utils:$utils_version"

        implementation "com.github.pambrose:srcref:$srcref_version"

        implementation "org.apache.commons:commons-text:$text_version"

        implementation "io.github.oshai:kotlin-logging-jvm:$logging_version"
        implementation "ch.qos.logback:logback-classic:$logback_version"
        implementation "junit:junit:$junit_version" // for junit playgrounds, which are in main

        testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    }

    tasks.register('sourcesJar', Jar) {
        dependsOn classes
        from sourceSets.main.allSource
        archiveClassifier = 'sources'
    }

    kotlin {
        jvmToolchain(17)
    }

    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += ['-Xbackend-threads=8',
                                 //'-Xcontext-receivers',
                                 //'-Xskip-prerelease-check',
            ]
        }
    }

    test {
        useJUnitPlatform()

        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
            exceptionFormat "full"
            showStandardStreams = true
        }
    }

    kotlinter {
        ignoreFailures = false
        reporters = ['checkstyle', 'plain']
    }
}
